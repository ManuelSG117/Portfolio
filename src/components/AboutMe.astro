---
import HobbiesCarousel from "../components/HobbiesCarousel.astro";
import React from "./icons/React.astro";
import Firebase from "./icons/Firebase.astro";
import JavaScript from "./icons/JavaScript.astro";
import MySQL from "./icons/MySQL.astro";
import Link from "./icons/Link.astro";
import GoogleMaps from "./icons/GoogleMaps.astro";
import ProjectModal from "./ProjectModal.astro";

const personalImageAlt = "Manuel Sandoval, desarrollador de software y entusiasta del deporte y la música"

const TAGS = {
  REACT: {
    name: "React",
    class: "bg-gradient-to-br from-blue-200 to-blue-300 text-blue-800 border border-blue-300 dark:from-blue-900/80 dark:to-blue-700/80 dark:text-blue-300 dark:border-blue-700",
    icon: React,
  },
  FIREBASE: {
    name: "Firebase",
    class: "bg-gradient-to-br from-orange-200 to-orange-300 text-orange-800 border border-orange-300 dark:from-orange-900/80 dark:to-orange-700/80 dark:text-orange-300 dark:border-orange-700",
    icon: Firebase,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-gradient-to-br from-yellow-200 to-yellow-300 text-yellow-800 border border-yellow-300 dark:from-yellow-900/80 dark:to-yellow-700/80 dark:text-yellow-300 dark:border-yellow-700",
    icon: JavaScript,
  },

  MAPS: {
    name: "Google Maps",
    class: "bg-gradient-to-br from-green-200 to-blue-300 text-blue-800 border border-blue-300 dark:from-green-900/80 dark:to-blue-700/80 dark:text-blue-300 dark:border-blue-700",
    icon: GoogleMaps,
  },
};

const PERSONAL_PROJECTS = [
  {
    title: "+Seguro",
    subtitle: "Plataforma web para reportes ciudadanos de seguridad pública",
    description:
      "Plataforma web moderna para facilitar el reporte de incidentes de seguridad pública." +
      "Implementación de autenticación segura mediante Google " +
      "Diseño de interfaz intuitiva para crear perfiles de usuario y reportar incidentes con evidencia multimedia." +
      "Integración de sistema de Maps para precisar ubicaciones de incidentes en tiempo real.",
    image: "/projects/seguro.webp",
    tags: [TAGS.REACT, TAGS.FIREBASE, TAGS.JAVASCRIPT, TAGS.MAPS],
  },
];
---

<article class="flex flex-col items-center justify-center gap-8 text-gray-700 dark:text-gray-300 md:flex-row">
  <div
    class="[&>p]:mb-4 [&>p>strong]:text-yellow-500 dark:[&>p>strong]:text-yellow-100 [&>p>strong]:font-normal [&>p>strong]:font-mono text-pretty order-2 md:order-1"
  >
    <p>
      Me llamo Manuel Sandoval. Empecé en la
      programación con un grupo de amigos, cuando tenía 18 años. Actualmente estoy <strong
        >contribuyendo y liderando la actualización de procesos de gobierno</strong
      > los cuales se que son molestos y cansados para todos,por ello busco que sea rápido y accesible para todos.
    </p>

    <p>
      Algunos de mis éxitos incluyen en la contribición del <strong
      >desarrollo backend de la primera aplicación de pagos para el servicio de agua en Michoacán, generando un aumento del 10% en ingresos y más de 1k descargas en Play Store.</strong
      >
    </p>

    <p>
      Como FullStack, <strong> mi objetivo es resolver problemas, liderando y contribuyendo en ideas que logren impactar en el producto final</strong>
    </p>
  </div>
</article>

<section class="mt-8">
  <h3 class="text-2xl font-bold mb-6 flex gap-x-3 items-center text-black dark:text-white">
    <span class="text-yellow-500 dark:text-yellow-400">&lt;</span>
    Proyectos Personales (En Desarrollo)
    <span class="text-yellow-500 dark:text-yellow-400">/&gt;</span>
  </h3>

  <div class="grid gap-4">
    {PERSONAL_PROJECTS.map(({ title, subtitle, description, tags, image, link }) => (
      <article class="relative group rounded-xl overflow-hidden bg-gradient-to-br from-black/60 to-black/90 dark:from-white/5 dark:to-white/20 backdrop-blur-sm border border-black/10 dark:border-white/10 hover:border-yellow-500/50 transition-all duration-500 hover:shadow-lg hover:shadow-yellow-500/50 dark:hover:shadow-lg dark:hover:shadow-yellow-500/20 hover:-translate-y-1 min-h-[500px]">
        <div class="absolute inset-0 bg-gradient-to-b from-transparent via-black/20 to-black/60 group-hover:via-black/40 group-hover:to-black/80 transition-colors duration-500 z-10"/>
        
        <div class="absolute inset-0 z-0">
          <img
            alt={title}
            class="w-full h-full object-cover scale-105 group-hover:scale-110 transition-transform duration-700 ease-out opacity-60 group-hover:opacity-40 group-hover:blur-sm"
            decoding="async"
            src={image}
          />
        </div>

        <div class="relative h-full flex flex-col justify-end py-8 px-6 z-20 space-y-6">
          <h3 class="text-2xl font-bold text-white mb-4 tracking-tight translate-y-8 group-hover:translate-y-0 transition-transform duration-300">
            {title}
          </h3>

          <p class="text-base text-gray-300 mb-6 opacity-0 group-hover:opacity-100 translate-y-8 group-hover:translate-y-0 transition-all duration-300">
            {subtitle}
          </p>

          <div class="flex flex-wrap gap-2 mb-4 translate-y-8 group-hover:translate-y-0 transition-transform duration-300">
            {tags.map((tag) => (
              <span class="inline-flex items-center px-2 py-1 text-[10px] rounded-full bg-white/10 text-white/80 backdrop-blur-sm border border-white/10">
                <tag.icon class="size-3 mr-1" />
                {tag.name}
              </span>
            ))}
          </div>

          <div class="flex justify-end gap-2 opacity-0 group-hover:opacity-100 translate-y-8 group-hover:translate-y-0 transition-all duration-300">
            <button 
              class="px-3 py-1.5 text-xs rounded-full bg-white/10 backdrop-blur-sm border border-white/10 text-white hover:bg-white/20 transition-colors duration-300"
              onclick="document.getElementById('project-modal').showModal()"
            >
              Ver más
            </button>
          </div>
        </div>
      </article>
    ))}
  </div>
</section>

<ProjectModal id="project-modal">
  <div class="grid gap-6 relative">
    <h3 class="text-2xl font-bold text-gray-700 dark:text-white/90 break-words">
      {PERSONAL_PROJECTS[0].title}
    </h3>

    <div class="space-y-4">
      {PERSONAL_PROJECTS[0].description.split(/\.(?=\s*[A-Z])/).map((item) => {
        if (!item.trim()) return null;
        return (
          <div class="flex items-start gap-3">
            <span class="flex-shrink-0 p-1 bg-yellow-500/10 rounded-full mt-1">
              <div class="w-2 h-2 rounded-full bg-yellow-500/80" />
            </span>
            <p class="text-sm text-gray-500 dark:text-gray-300">
              {item.trim() + (item.trim().endsWith('.') ? '' : '.')}
            </p>
          </div>
        );
      })}
    </div>

    <div class="relative rounded-xl overflow-hidden group">
      <div class="absolute inset-0 duration-500 z-10"/>
      <img
        src={PERSONAL_PROJECTS[0].image}
        alt={PERSONAL_PROJECTS[0].title}
        class="w-full h-64 object-cover
          scale-100 group-hover:scale-110
          transition-all duration-700 ease-out"
      />
    </div>

    <footer class="flex items-center justify-between pt-6">
      <div class="flex flex-wrap gap-2">
        {PERSONAL_PROJECTS[0].tags.map((tag) => (
          <span class={`inline-flex items-center px-2 py-1 
            text-xs rounded-full bg-black/15 dark:bg-white/10 
            backdrop-blur-sm border border-black/10 dark:border-white/10
            text-gray-600 dark:text-gray-200 ${tag.class}`}>
            <tag.icon class="size-3 mr-1" />
            {tag.name}
          </span>
        ))}
      </div>

      {PERSONAL_PROJECTS[0].link && (
        <a
          href={PERSONAL_PROJECTS[0].link}
          target="_blank"
          rel="noopener"
          class="px-3 py-1.5 text-xs rounded-full
            bg-yellow-500/20 backdrop-blur-sm
            border border-yellow-500/30 text-yellow-500
            hover:bg-yellow-500/40 transition-colors duration-300
            inline-flex items-center gap-2"
        >
          <Link class="size-3" />
          <span>Demo</span>
        </a>
      )}
    </footer>
  </div>
</ProjectModal>

<script>
  // Cerrar el modal cuando se hace clic en el botón de cerrar
  document.querySelectorAll('[data-close-modal]').forEach(button => {
    button.addEventListener('click', () => {
      const modal = button.closest('dialog');
      if (modal) modal.close();
    });
  });

  // Cerrar el modal cuando se hace clic fuera de él
  document.querySelectorAll('dialog').forEach(dialog => {
    dialog.addEventListener('click', (e) => {
      const dialogDimensions = dialog.getBoundingClientRect();
      if (
        e.clientX < dialogDimensions.left ||
        e.clientX > dialogDimensions.right ||
        e.clientY < dialogDimensions.top ||
        e.clientY > dialogDimensions.bottom
      ) {
        dialog.close();
      }
    });
  });
</script>

